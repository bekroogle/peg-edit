!!! 5
%html.no-js(lang="en")
  %head
    %meta(charset="utf-8")
    %meta(name="viewport" content="width=device-width, initial-scale=1.0")
    %title C.PEGjs ("See Spot PEGjs")
    %link(rel="stylesheet" href="stylesheets/app.css")
    %link(rel="stylesheet" href="stylesheets/style.css")
    %link{"rel" => "stylesheet", "href"=>"./bower_components/foundation-icons/foundation_icons_general/stylesheets/general_foundicons.css"}
    %script(src="bower_components/modernizr/modernizr.js")
  %body
    .row
      .large-1.columns
        &nbsp;
      .large-10.columns
        %h4 PEGedit &raquo; a web-based PEG.js design tool.
      .large-1.columns
        %a#help-button{:href => "#"} Help
    .row
      .large-1.column
        &nbsp;
      / Left panel
      .small-6.large-5.columns.panel#left-panel
        %nav.top-bar(data-topbar role="navigation")
          %ul.title-area
            %li.name
              %h1
                %a{:href => "#"} PEG.js editor
            %li.toggle-topbar.menu-icon
              %a{:href => "#"}
                %span
          %section.top-bar-section
            
            %ul.left
              %li.has-dropdown.has-form
                %a#samples{"href" => "#", "data-dropdown" => "drop"} Sample Grammars
                %ul#drop.dropdown{"data-dropdown-content" => ""}
                  %li
                    %a#sample_one{:href => "#"} Simple expressions
                  %li
                    %a#left-assoc{:href => "#"} Left-associative refactored
              %li.active
                %a#build_parser_btn.button{:href => "#"} Build Parser &raquo;
          %section.top-bar-section
            
            %ul.right.button-group
              %li                 
                %a#peg-zoom-out.button(href="#")-
              %li
                %a#peg-zoom-in.button(href="#") +
              %li.divider
              %li.has-form
                %a#peg_editor_settings.button{:href => "#"}
                  %i.foundicon-settings
        #editor

      -#      
      -# Right panel
      -#
      .small-6.large-5.columns.panel#right-panel
        
        -# Top right
        .row
          .large-12.columns#top-right
            %nav.top-bar(data-topbar role="navigation")
              %ul.title-area
                %li.name
                  %h1
                    %a(href="#")Parse string editor
                %li.toggle-topbar.menu-icon
                  %a(href="#")
                    %span 
              %section.top-bar-section
                %ul.right
                  %ul.button-group.left
                    %li                 
                      %a#source-zoom-out.button(href="#")-
                    %li
                      %a#source-zoom-in.button(href="#") +
                    %li.divider
                  %li.active.has-form
                    %a#source_editor_settings.button{:href => "#"} Editor Settings
                %ul.left
                  %li.active
                    %a#parse_btn.button(href="#") Parse &raquo;
            #output

        -# Bottom right
        .row
          .large-12.columns#bottom-right
            %p
              %nav.top-bar(data-topbar role="navigation")
                %ul.title-area
                  %li.name
                    %h1
                      %a(href="#")Parse tree view
                  %li.toggle-topbar.menu-icon
                    %a(href="#")
                      %span 
                %section.top-bar-section
                  %ul.right
                    %li.active.has-form
                      %a#tree-reset.button{:href => "#"} Reload
              #treediv
      .large-1.column
        &nbsp;
    %ol.joyride-list{"data-joyride" => ""}
      %li{"data-options" => "prev_button: false; postRideCallback: function(){alert('test');}"}
        %h4 Welcome to PEGedit
        %p Click next for an extremely brief tour.
        %p You can watch see this again by clicking "Help" at the top of the screen.

      %li{"data-id" => "firstStop", "data-options" => "tip_location: right; prev_button: false"}
        %h4 Build a parser...
        %p To start, you enter your PEGjs grammar here.

      %li{"data-id" => "stopTwo", "data-options" => "tip_location: left"}
        %h4 Parse Something!
        %p  The text that your PEGjs grammar will be parsing goes here.
      
      %li{"data-id" => "treediv", "data-options" => "tip_location: top"}
        %h4 And see your parse tree!
        %p You can use the mouse, scroll wheel and gestures to pan or zoom the tree.
      
      %li{"data-id" => "samples", "data-button" => "Got it!"}
        %h4 Try a sample to start!
        %p Click here to pick one of the sample grammars.
        



    
    %script(src="./bower_components/jquery/dist/jquery.min.js")
    %script(src="./bower_components/foundation/js/foundation.min.js")
    %script(src="./bower_components/jquery.cookie/jquery.cookie.js")
    %script(src="./bower_components/foundation/js/foundation/foundation.joyride.js")
    %script(src="//cdnjs.cloudflare.com/ajax/libs/ace/1.1.3/ace.js")
    %script(src="./bower_components/ace/libs/ace/ace.js")
    %script(src="./bower_components/pegjs/peg-0.8.0.js")
    %script(src="./js/doc-ready.js")
    %script(src="./bower_components/d3/d3.min.js")
    %script(src="./js/do-tree.js")
    %script(src="./js/app.js")