
!!! 5
%html.no-js(lang="en")
  %head
    %meta(charset="utf-8")
    %meta(name="viewport" content="width=device-width, initial-scale=1.0")
    %title c.run ("See Spot run")
    %link(rel="stylesheet" href="stylesheets/app.css")
    %link{"rel" => "stylesheet", "href" => "./bower_components/fontawesome/css/font-awesome.css"}
    %script(src="bower_components/modernizr/modernizr.js")
  %body
    #top-row.row
      %nav.top-bar{"data-topbar" => "", "role" => "navigation"}
        %ul.title-area
          %li.name
            %h1
              %a{:href => "#"} c.run
          %li.toggle-topbar.menu-icon
            %a{:href => "#"}
              %span
        -# /ul

        %section.top-bar-section
          -# right nav section
          %ul
            %li.divider
            -# Build Parser was here
            %li.divider
            %li#topbar-parse-btn
              %a{:href => "#"} 
                %i.fa.fa-play
                Parse
          %ul.right
            %li#login-btn
              %a{:href => "#", "data-reveal-id" => "token-prompt"} 
                %i.fa.fa-github
                Login
            %li#user-account.has-dropdown.gone
              %a#github-id{:href => "#"}
              %ul.dropdown 
                %li
                  %a#logout-btn{:href => "#"} Logout
            %li.divider
            %li#help-dropdown.has-dropdown
              %a{:href => "#"}
                %i.fa.fa-question
                Help
              %ul.dropdown
                %li
                  %a{:href => "https://github.com/bekroogle/pegedit/wiki/Keybindings", "target" => "_blank"}
                    %i.fa.fa-keyboard-o
                    &nbsp; Keybindings
                %li
                  %a#help-btn{:href => "#"}
                    %i.fa.fa-graduation-cap
                    &nbsp; Welcome tutorial
                %li
                  %a{:href => "https://github.com/bekroogle/pegedit/wiki", "target" => "_blank"} 
                    %i.fa.fa-book
                    &nbsp; Wiki
    -# main content row
    .row
      / Left panel
      .small-12.large-6.columns
        .row
          %h2#page-title Exercises:
          .small-5.large-4.columns#exercise-list
            %ul.side-nav
              %li
                %a{:href => "exercises.html"} Exercises Home
              %li.divider
              %li
                %a{:href => "?exercise=01"}Exercise 1
              %li
                %a{:href => "?exercise=02"}Exercise 2
              %li
                %a{:href => "?exercise=03"}Exercise 3

          .small-7.large-8.columns#page-copy
            .panel.callout
            
              This is a pre-alpha version of c.run. In other words, it isn't done. It's not ready to be used as a tool for teaching students. For self-study, be aware that features remain unimplemented and the c.run language still undergoes breaking changes often (we're still changing our minds on how it goes).
            .panel
              %p
                Welcome to c.run (pronounced "see spot run"). If you're familiar with the old <em>Dick and Jane</em> series of books to teach children to read, then the name ought to sound familiar. We've stolen... I mean, borrowed under terms of fair use, more than just a catchy phrase from its namesake. The pedagogical philospohy of this site follows the old and effective formula in those classic books.
              %p
                The book series started with the simple and iconic sentence, "See Spot run." Similarly, we're going to start you out with really simple programming consturcts. Like the books, we'll also build upon them, stringing them up together, nesting them inside each other, and (maybe) occasionally, showing you some exceptions.
              %p
                By the end of the process, you will have learned enough of the necessary constructs and ideas solve almost any general programming problem...
              %p
                But, programming languages are a lot like the language taught in the books (English), knowing the rules of grammar is a far cry from being great writer. But like writing, it's fun and you get better with practice, so don't give up!
              %p
                When you're ready, choose
                %a{:href => "#"} Exercise 1
                from the list on the left.

          .progress.success.radius{"style" => "border: 0;"}
            Progress
            %span.meter

                
      -#
      -# Right panel
      -#
      .small-12.large-6.columns#right-panel
        -# Top right
        .row
          .small-12.columns#top-right
            #source-editor-menu.off-canvas-wrap{"data-offcanvas" => ""}
              .inner-wrap
                %nav.tab-bar(data-topbar role="navigation")
                  %section.left-small
                    %a.left-off-canvas-toggle.menu-icon{:href => "#"}
                      %span
                  %section.middle.tab-bar-section
                    %span
                      %span#source-editor-title See Spot run:
                %aside.left-off-canvas-menu
                  %ul.off-canvas-list
                    %li
                      %label Actions
                    %li
                      %a#parse-btn{:href => "#"}
                        %i.fa.fa-play
                        Parse
                    %li
                      %label Settings
                    %li
                      %a#source-zoom-in-btn{:href => "#"}
                        %i.fa.fa-search-plus
                          Increase font size
                    %li
                      %a#source-zoom-out-btn{:href => "#"}
                        %i.fa.fa-search-minus
                          Decrease font size
                    %li
                      %a#source-editor-settings-btn{:href => "#"}
                        %i.fa.fa-cog
                          Advanced settings
                    %li.divider
                    %li
                      %a#source-editor-fullscreen-btn{:href => "#"}
                        %i.fa.fa-expand
                          Full Screen
                %a.exit-off-canvas{:href => "#"}
                #source

        -# Bottom right
        .row
          .small-12.columns#bottom-right
            #console-view
            
    -#
      .row
        #status.small-8.columns
          %small
            MIT License (MIT) &copy; 2014-2015 Benjamin J. Kruger.
            %a{:href => "mailto://bekroogle@gmail.com"}bekroogle@gmail.com
        #fork-col.small-4.columns
          .right
            %a{:href => "https://github.com/bekroogle/pegedit"}
              %img#forkme-img{:src => "./forkme.png"}

    -# Load Gist by ID Prompt
    #gist-prompt.reveal-modal.tiny{"data-reveal" => ""}
      %h4 Load file by Gist ID
      %form
        %row
          .small-2.columns
            %label.right.inline{"for" => "gist-id"}
              Gist ID:
          .small-8.columns
            %input#gist-id{"type" => "text"}
          .small-2.columns
            %a#open-gist-btn.button{:href => "#"} Go!
      %a.close-reveal-modal &#215;

    -# Download Parser Prompt
    #download-prompt.reveal-modal.small{"data-reveal" => ""}
      %h4 Download your parser.
      %form
        %row
          .small-4.columns
            %label.right.inline{"for" => "parser-variable-name"}
              Parser variable name:
          .small-5.columns
            %input#parser-variable-name{"type" => "text", "placeholder" => "module.exports"}
          .small-3.columns
            %a#download-prompt-btn.button{:href => "#"} Snag it!
        %row
          .small-2.columns
          .small-8.columns
            %p (The raw source code will appear in an untitled pop-up.)
          .small-2.columns
      %a.close-reveal-modal &#215;

    -# GitHub Token Prompt
    #token-prompt.reveal-modal.tiny{"data-reveal" => ""}
      %h4 Enter a GitHub personal access token:
      %form
        %row
          .small-1.columns
            %label.right.inline{"for" => "#access-token"}
          .small-8.columns
            %input#access-token{"type" => "text"}
          .small-3.columns
            %a#set-token-btn.button.small{:href => "#", "type" => "submit"} Set token
        %row
          .small-2.columns
          .small-8.columns
            %p 
              To generate a GitHub personal access token, go 
              %a{:href => "https://github.com/settings/applications"} here
              \.
          .small-2.columns
      %a.close-reveal-modal &#215

    -# Joyride
    %ol.joyride-list{"data-joyride" => ""}
      
      %li{"data-options" => "prev_button: false; postRideCallback: function(){alert('test');}"}
        %h4 Welcome to pegedit
        %p 
          %em
            Please note that this site is an alpha-stage prototype under rapid development.
            It is likely to change often and, at times, some features may be broken or only
            partially implemented.
        %p Click next for an extremely brief tour.
        %p You can watch see this again at any time by clicking "Help" at the top of the screen.
      
      -# PEG editor:
      %li{"data-id" => "editor", "data-options" => "tip_location: right; prev_button: false"}
        %h4 Make your parser...
        %p To start, you enter your PEG.js grammar here.

      -# Source editor:
      %li#source-editor-tip{"data-id" => "stopTwo", "data-options" => "tip_location: left"}
        %h4 Parse Something!
        %p  The text that your PEG.js grammar will be parsing goes here.
      
      -# Build Parser
      %li{"data-id" => "build-parser-btn", "data-options" => "tip_location: right;", "data-button" => "Okay..."}
        %h4 If you build it, they will come.
        %p Here's where you click to build your parser.
      -# Output panel:      
      %li{"data-id" => "bottom-right", "data-button" => "Okay..."}
        %h4 3 Ways to See the Results!
        %p Select one of the three tabs below to inspect your parser's results.

      -# Parser Output
      %li{"data-id" => "parser-output-tab", "data-options" => "tip_location: top"}
        %h4 Parser output
        %p This is where you can see the JSON representation of the parse tree produced by your PEG.

      -# Tree View
      %li{"data-id" => "tree-view-tab", "data-options" => "tip_location: top"}
        %h4 What a pretty tree!
        %p Thanks to the library, d3.js, you don't need an imagination to visualize your parse tree!

      -# Console View
      %li{"data-id" => "console-view-tab", "data-options" => "tip_location: top"}
        %h4 Console View
        %p This tab shows the results of traversing your parse tree...
        %p Essentially, it's what you'd see if your program ran in a console.
      
      
      %li{"data-id" => "samples", "data-button" => "Got it!"}
        %h4 Try a sample to start!
        %p Click here to pick one of the sample grammars.
    -# Script imports:
    %script(src="./bower_components/jquery/dist/jquery.min.js")
    %script(src="./bower_components/foundation/js/foundation.min.js")
    %script(src="./bower_components/foundation/js/foundation/foundation.topbar.js")
    %script(src="./bower_components/foundation/js/foundation/foundation.offcanvas.js")
    %script(src="./bower_components/foundation/js/foundation/foundation.alert.js")
    %script(src="./bower_components/ace-builds/src-min/ace.js")
    %script(src="./bower_components/pegjs/peg-0.8.0.min.js")
    %script(src="./bower_components/mousetrap/mousetrap.js")
    %script(src="./js/do-tree.js")
    %script(src="./js/doc-ready.js")
    %script(src="./js/app.js")
    
